[{"D:\\GitHub\\Oficial-project-hackathon\\hackathon-client\\src\\components\\Data\\index.js":"1","D:\\GitHub\\Oficial-project-hackathon\\hackathon-client\\src\\components\\BarChart\\index.js":"2","D:\\GitHub\\Oficial-project-hackathon\\hackathon-client\\src\\pages\\Dashboard\\index.js":"3","D:\\GitHub\\Oficial-project-hackathon\\hackathon-client\\src\\styles\\GlobalStyles.js":"4","D:\\GitHub\\Oficial-project-hackathon\\hackathon-client\\src\\components\\LineChart\\index.js":"5","D:\\GitHub\\Oficial-project-hackathon\\hackathon-client\\src\\components\\NavBar\\index.js":"6","D:\\GitHub\\Oficial-project-hackathon\\hackathon-client\\src\\components\\Maps\\index.js":"7","D:\\GitHub\\Oficial-project-hackathon\\hackathon-client\\src\\config\\socket-io.js":"8","D:\\GitHub\\Oficial-project-hackathon\\hackathon-client\\src\\components\\PlacesDetected\\index.js":"9","D:\\GitHub\\Oficial-project-hackathon\\hackathon-client\\src\\index.js":"10"},{"size":499,"mtime":1612562999893,"results":"11","hashOfConfig":"12"},{"size":2828,"mtime":1612596340914,"results":"13","hashOfConfig":"12"},{"size":501,"mtime":1612564988998,"results":"14","hashOfConfig":"12"},{"size":933,"mtime":1612495178039,"results":"15","hashOfConfig":"12"},{"size":4803,"mtime":1612498249100,"results":"16","hashOfConfig":"12"},{"size":358,"mtime":1612494235123,"results":"17","hashOfConfig":"12"},{"size":2741,"mtime":1612499423444,"results":"18","hashOfConfig":"12"},{"size":163,"mtime":1612583045462,"results":"19","hashOfConfig":"12"},{"size":916,"mtime":1612486526319,"results":"20","hashOfConfig":"12"},{"size":205,"mtime":1612231356966,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"68e7h2",{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GitHub\\Oficial-project-hackathon\\hackathon-client\\src\\components\\Data\\index.js",["47","48","49"],"D:\\GitHub\\Oficial-project-hackathon\\hackathon-client\\src\\components\\BarChart\\index.js",["50","51"],"D:\\GitHub\\Oficial-project-hackathon\\hackathon-client\\src\\pages\\Dashboard\\index.js",[],["52","53"],"D:\\GitHub\\Oficial-project-hackathon\\hackathon-client\\src\\styles\\GlobalStyles.js",[],"D:\\GitHub\\Oficial-project-hackathon\\hackathon-client\\src\\components\\LineChart\\index.js",[],["54","55"],"D:\\GitHub\\Oficial-project-hackathon\\hackathon-client\\src\\components\\NavBar\\index.js",["56"],"\r\n\r\nimport './style.css';\r\n\r\n\r\nfunction NavBar() {\r\n\r\n\treturn (\r\n\t\t<nav>\r\n\t\t<ul>\r\n\t\t<li className='menu-item brand'>\r\n\t\t<a href=\"/\" >MONITORAÇÃO DE RUÍDOS DE SOM</a>\r\n\t\t</li>\r\n\t\t<li className=\"menu-item menu-item-notify\">\r\n\t\t<a href=\"#\" ><span className=\"notificationBadge\">3</span></a>\r\n\t\t\r\n\t\t</li>\r\n\t\t</ul>\r\n\r\n\t\t</nav>\r\n\t\t);\r\n}\r\n\r\nexport default NavBar;","D:\\GitHub\\Oficial-project-hackathon\\hackathon-client\\src\\components\\Maps\\index.js",["57"],"import React, {useState, useEffect} from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport PlacesDetected from '../../components/PlacesDetected';\r\n\r\nimport socket from '../../config/socket-io.js'\r\n\r\nvar room_real_time = \"room_real_time\";\r\n\r\nsocket.on('connect', function() {\r\n       // Connected, let's sign-up for to receive messages for this room\r\n       socket.emit('room', room_real_time);\r\n       console.log('[IO] Connect => A new connection has been established')\r\n\r\n   });\r\n\r\nconst coordinates = [\r\n{ sensor: 1, latitude: -15.80028100253557, longitude: -46.01022300110646 },\r\n{ sensor: 2, latitude: -15.86671780683419, longitude: -46.19604709506429 },\r\n{ sensor: 3, latitude: -15.852270775231188, longitude: -46.16143289686479 },\r\n{ sensor: 4, latitude: -15.922914504562462, longitude: -46.05554858991217 }\r\n]\r\n\r\n\r\n\r\nfunction ViewMaps(){\r\n\r\n\tvar sensores = []\r\n\tsocket.emit('req.sensor', {\r\n\t\tid: 2,\r\n\t\tmessage: 'tal'\r\n\t})\r\n\r\n\tsocket.on('res.sensor', data => {\r\n\r\n\r\n\t\tsensorsMaps.filter(function (el) {\r\n\t\t\treturn el.sensor !== data.sensor;\r\n\t\t});\r\n\t\tsetSensorsMaps([...sensorsMaps, data])\r\n\t})\r\n\r\n\r\n\tconst [latitude, setLatitude] = useState('');\r\n    const [longitude, setLongitude] = useState('');\r\n\tconst [sensorsMaps, setSensorsMaps] = useState([]);\r\n\tuseEffect(() => {\r\n\r\n\t\tnavigator.geolocation.getCurrentPosition(\r\n            (position) => {\r\n                const { latitude, longitude } = position.coords;\r\n\r\n                setLatitude(latitude);\r\n                setLongitude(longitude);\r\n\r\n            },\r\n            (err) => {\r\n                console.log(err);\r\n            },\r\n            {\r\n                timeout: 30000,\r\n            }\r\n        )\r\n\r\n\r\n\r\n\t\tsetSensorsMaps(coordinates)\r\n\t\tsocket.on('res.previous_sensor', (data) => {\r\n\t\t\tsetSensorsMaps(data)\r\n\t\t})\r\n\t}, []);\r\n\r\n\r\n\tconst defaultProps = {\r\n\t\tcenter: {\r\n\t\t\tlat: -15.922914504562462,\r\n\t\t\tlng: -46.05554858991217\r\n\t\t},\r\n\t\tzoom: 11\r\n\t};\r\n\t\r\n\treturn (\r\n\r\n\t\t<div className=\"maps\">\r\n\t\t<span>Monitoração em tempo real</span>\r\n\t\t<GoogleMapReact className=\"map\" \r\n\t\tbootstrapURLKeys={{ key: \"AIzaSyDFEVR21PUndmkFOqjv0gC-VPjecrL3NzY\" }}\r\n\t\tdefaultCenter={defaultProps.center}\r\n\t\tdefaultZoom={defaultProps.zoom}\r\n\t\t>\r\n\r\n\t\t{sensorsMaps && sensorsMaps.map((point) => (\r\n\t\t\t<PlacesDetected\r\n              // key={}\r\n              lat={point.latitude}\r\n              lng={point.longitude}\r\n              text={point.sensor}\r\n\t          size={point.point_size}\r\n\t          />\r\n\t          ))}\r\n\r\n\t\t\t<PlacesDetected\r\n              // key={}\r\n              lat={latitude}\r\n              lng={longitude}\r\n              text=''\r\n\t          pointer='point5'\r\n\t         />\r\n\t         \r\n\r\n\t\t</GoogleMapReact>\r\n\r\n\t\t</div>\r\n\r\n\t\t)\r\n}\r\n\r\nexport default ViewMaps;","D:\\GitHub\\Oficial-project-hackathon\\hackathon-client\\src\\config\\socket-io.js",[],"D:\\GitHub\\Oficial-project-hackathon\\hackathon-client\\src\\components\\PlacesDetected\\index.js",["58","59","60","61"],"import React from 'react';\r\nimport alert from '../../assets/alert.svg';\r\nimport point1 from '../../assets/point1.svg';\r\nimport point2 from '../../assets/point2.svg';\r\nimport point3 from '../../assets/point3.svg';\r\nimport point4 from '../../assets/point4.svg';\r\nimport point5 from '../../assets/point5.svg';\r\nimport seta from '../../assets/seta.svg';\r\n\r\nfunction PlacesDetected({text, size, pointer, volume, frequence}) {\r\n\t//console.log(size, 'point_size')\r\n\tlet point = point4\r\n\tif(volume > frequence){\r\n\t\tpoint = point2\r\n\t}else if(volume < frequence){\r\n\t\tpoint = point3\r\n\t}else if(volume == frequence){\r\n\t\tpoint = point1\r\n\t}\r\n\r\n\r\n\tif(pointer == 'point5'){\r\n\t\tpoint = point5\r\n\t\tsize = '32px'\r\n\t}\r\n\tif(pointer == 'seta'){\r\n\t\tpoint = seta\r\n\t\tsize = '40px'\r\n\t}\r\n\r\n  return (\r\n    <div>\r\n        <img src={point} alt=\"Delivery\" height={size} />\r\n        {text}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default PlacesDetected;","D:\\GitHub\\Oficial-project-hackathon\\hackathon-client\\src\\index.js",[],{"ruleId":"62","severity":1,"message":"63","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":13},{"ruleId":"62","severity":1,"message":"66","line":1,"column":16,"nodeType":"64","messageId":"65","endLine":1,"endColumn":24},{"ruleId":"62","severity":1,"message":"67","line":1,"column":26,"nodeType":"64","messageId":"65","endLine":1,"endColumn":35},{"ruleId":"62","severity":1,"message":"68","line":6,"column":8,"nodeType":"64","messageId":"65","endLine":6,"endColumn":15},{"ruleId":"62","severity":1,"message":"69","line":66,"column":7,"nodeType":"64","messageId":"65","endLine":66,"endColumn":18},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"70","replacedBy":"74"},{"ruleId":"72","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":15,"column":3,"nodeType":"78","endLine":15,"endColumn":16},{"ruleId":"62","severity":1,"message":"79","line":27,"column":6,"nodeType":"64","messageId":"65","endLine":27,"endColumn":14},{"ruleId":"62","severity":1,"message":"80","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":13},{"ruleId":"81","severity":1,"message":"82","line":17,"column":18,"nodeType":"83","messageId":"84","endLine":17,"endColumn":20},{"ruleId":"81","severity":1,"message":"82","line":22,"column":13,"nodeType":"83","messageId":"84","endLine":22,"endColumn":15},{"ruleId":"81","severity":1,"message":"82","line":26,"column":13,"nodeType":"83","messageId":"84","endLine":26,"endColumn":15},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'loading' is defined but never used.","'lastSelectd' is assigned a value but never used.","no-native-reassign",["85"],"no-negated-in-lhs",["86"],["85"],["86"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'sensores' is assigned a value but never used.","'alert' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]